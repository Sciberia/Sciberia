2. Вступление

МАТЕРИАЛ ДЛЯ ЧТЕНИЯ: Р.Рамакришнан и Й.Герке. Глава первая.

Что такое база данных? База данных это собрание структурированных данных.

База данных - это абстрактное представление совокупности допустимых значений приложения.

• Как правило структурированных в "записи" (традиционно большие значения на диске)

• и отношениями между этими записями

Это предмет посвящен системам управления базами данных (СУБД), системам для создания, управления и доступа к базам данных.

СУБД - программное обеспечение (как правило совокупность ПО), которое контролирует доступ приложений к данным, ... 

Почему это важно? Потому что есть множество приложений, по которым нет отдельных предметов а МИТ.

Чем же базы данных так особенны?

Что такое система управления базами данных?

Повсеместность (везде, от смартфона до Википедии)

Влияние на мир: рынок ПО (брибл. размер рынка ОС, около 20млрд дол в год). Повседневные задачи сайтов, больших компаний, научных проектов, также как и бизнес аналитика + глубинный анализ данных(Data Mining), осуществляется при помощи БД.

Чтобы быть счастливым, нужно знать базы данных!

Цель СУБД - это упростить хранение и доступ к данным.

Для достижения этой цели у СУБД есть средства, которые помогают выполнять наиболее распространенные операции с данными. 

Сообщество посвятило значительное количество времени на формулировку нескольких базовых принципов о работе приложений с данными.

Эти принципы позволяют нам установить требования, которые приложение выдвигает к хранению и доступу к данным, а также выяснить как СУБД сможет удовлетворить эти требования.

Таким образом вы сможете обзавестись инструментарием, который выходит за рамки нашей учебной программы. Эти инструменты помогут при работе с любым приложением, использующим данные.

Теперь мы перейдем к примерам того, как сложно работать без баз данных. Позже мы познакомимся с базовыми принципами баз данных и увидим как с ними все становится намного проще.

3. Пример о мафии

Сегодня мы рассмотрим ситуацию с точки зрения пользователя и попытаемся выявить причины, по которым нам выгоднее исползовать СУБД вместо прямого доступа к данным (например, открывать файлы).

Давайте представим, что я босс мафии (несмотря на мой акцент, эта этот пример - неправда) и я хочу организовать моих "парней" (солдат моей мафиозной армии, см Рис.2) и увеличить их эффективность.

Мне также понадобятся бухгалтеры, работники службы безопасности и тд. У меня большая организация и все время что-то происходит (к примеру, сножество людей одновременно отправляют запросы в базу данных)

Рис.2 Иерархия Мафии. 

Мне нужно хранить информацию о:
• Людях, которые на меня работают (солдаты, командиры и тд)

• организациях, с окотрыми сотрудничаю (полиция, мерия, политики)

• сделках, которые заключены или обговариваются

- защитные установки

- перевозка оружия

- перевозка наркотиков

- денежные займы

- контроль над подчиненными/политиками

- Мне нужно измегать краж, грабежей и похидений (слишком много внимая со стороны полиции)

- теневой бизнес

- отмывание денег и 

- назначение заданий для солдат

- и т.п.

Мне нужно будет поделиться частью этой информации с третьим лицом, защитив при этом часть данных.

Поэтому мне потребуется:

• крестный отец, боссы и их подручные должны иметь доступ к данным и иметь возможноность производить любые операции (назначать задания шестеркам, создавать или закрывать операции, платить копам, отслеживать денежные потоки, и тд)

• бухгалтеры (в количестве 20 человек) должны иметь доступ к бухгалтерии (отслеживать отмывание денег, переводить деньги из банка в банк, отчитываться о  взяткая)

• "Шестерки" (5000 человек) должны ежедневно отчитываться о проишествиях, расходах и сборе дани.

• интерфейс с разграниченым доступом для других боссов, с которыми я сотрудничаю (поиск по копам, проверка подконтрольных нам територий, и тд.).

Рис.3: Какие данные хранить в мафиозной базе данных

3.1 Предложение, от которого невозможно отказаться

Я делаю тебе предложение, от которог ты не сможешь отказаться: "Тебя нанимают для создания мафиозной информационной системы. Если справишься, то получишь деньги, спортивные авто и сладкую жизнь. Но если нет... вообщем, ты не хочешь облажаться".

Первое, что приходит в голову - файловая система:

1. Что нужно хранить: каковы ключевые сущности из реальной жизни, которые сы будем хранить? каковы их свойства?

2. Как хранить данные: возможно можно обойтись файлами people.txt, organisations.txt, operations.txt, money.txt, daily-log.txt. Каждый из файлов - хранит текстовый формат, по одной записи в строке.

3. Контроль доступа с высокой детализацией: бухгалтеры должны иметь доступ к деньгам, но не должны знать имена и адреса исполнителей. Исполнители должны иметь доступ к операциям, но не деньгам.

4. Как обеспечивать доступ к данным: мы могли бы написать процедурную программу, которая открывала бы один или несколько файлов, сканировала бы их и выдавала данные.

5. Шаблоны доступа и производительность: как найти магазин, с которого мы давно не взымали деньги (по меньшей мере 1 месяц)? Просканировать файл с операциями и отсортировать по времени, найдя самую старую? (нужно чтобы все было вовремя и босс не сердился... вы точно этого не хотите. Нужно еще убедиться, что никто не имеет к этому доступ).

"Дрянной Тони" - стукач, и мы хотим знать все дела и всех людей, с которыми он работал. Чтобы прикрыть лавочку быстро, ОЧЕНЬ быстро!!!

6. Атомарность(логическая неделимость): когда бухгалтер переводит деньги со счета на счет, нам нужно быть уверенными, что деньги ушли с одного и счета и зашли на другой. И никак иначе! (Нам не надо чтобы деньги "исчезали")

7. Согласованность: гарантия того, что данные согласованы (например, нет двух операций с одним именем)

8. Изолируемость: несколько исполнителей могут добавлять записи в ежедневный отчет одновременно. (риск в том, чтобы при этом они не писали поверх других данных) 

9. Устойчивость: в случае, если отключится свет и компьютер выключится, то данные не будут утеряны (например, если мы заплатили копам, то мы должны быть уверены, что после перезапуска платеж останется в системе и пройдет. Иначе, на нас будет облава)

Использование файловой системы, как вы уже догадались, не приведет к успеху. Модет даже быть опасным. К счастью, вы попали в класс 6.830/6.814 и теперь знаете: базы данных решают все эти проблемы! У вас все получится!

Вы могли уже заметить, что вышеуказанные проблемы относятся к трем принципам, которые мы уже обсудили: 1-3 это проблемы относящиеся в моделям данных, 4-5 относятся к языку запросов, а 6-9 относятся к транзакциям.

Внимание! Этот перевод, возможно, ещё не готов.
Его статус: идёт перевод

Переведено на Нотабеноиде
http://translate.kursomir.ru/book/82/433

Переводчики: andrushkaus

