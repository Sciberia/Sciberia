Программное обеспечение

Введение & Путь к цели

Навыки дизайна
Анализ проблем
Поведенческий дизайн
Дизайнерские компромиссы
Навыки программирования
Вдумчивое написание кода
Новые языки и фреймворки
Профессиональная практика
Командная работа
Репозитории
Презентация

Этапы курса
Сольные проект по фазам
Фаза 1: Начинаем
Фаза 2: Минимальный рабочий продукт
Фаза 3: Добавляем крутые штуки
Фаза 4: Критика и разбор полетов

Командный проект
Ты выбираешь команду и проект
Занятия в классе
Поиск самородков и проверка твоей работы
Материалы для каждого занятия с мини-тестами
Изложение
Фокус на технологиях

Политика оценивания
По частям:
Сольная работа - 40%, командная - 30%, совместная работа и тесты 10%
Отличие 20% - лучший дизайн и код
Совместная работа над сольными проектами
Можно обсуждать планы и работу, но нужно указывать своих коллег
Вся письменная работа должна быть выполнена индивидуально
Опоздания
3 дня пропусков, не больше
Пропуски по болезни ( со справкой )

Соглашение об обучении

Почему Ruby?
Rails позволяет обойтись без SQL
Культура элегантности и простоты
Синтакс чище, язык элегантней по сравнению с Python
Хорошо научиться еще одному языку
Почему GitHub?
Самый популярный open-source хостинг
Отличная поддержка решения проблем
Они дали нам бесплатные приватные репозитории (спасибо им!)

Время лабораторных  с 5 до 7 вечера
Читаем вебсайт - на нем основная информация и оценка сольных проектов
Устный опрос завтра
Можно идти на любой из них
P0 до понедельника
Hello World(прим. перев. - стандартное название для первой программы) в Rails
Хранится на GitHub, развертывается на Heroku


MIT Свободные Курсы
http://ocw.mit.edu





6.170 Программное обеспечение

Весна 2013





За информацией по поводу этих материалов или положений по использованию посещайте:
http://ocw.mit.edu/terms

Внимание! Этот перевод, возможно, ещё не готов.
Его статус: идёт перевод

Переведено на Нотабеноиде
http://translate.kursomir.ru/book/20/22

Переводчики: delneg

