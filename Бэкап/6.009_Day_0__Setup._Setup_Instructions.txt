Описание курса и Настройка

Добро пожаловать!

Данный класс представляет из себя введение в очищение, анализ и визуализацию данных.

По мере прохождения материала мы будем анализировать реальные примеры массивов данных. 

Каждый день, мы будем тратить около 30 минут на представления запланированных концепций, оставшееся время мы будем делать упражнения. Мы написали ежедневные планы, основываясь на которых вы сможете писать свой код, а мы всегда будем рядом чтобы помочь.

Мы первый раз преподаем данный курс, поэтому будем учится не меньше чем вы.

Не стесняйтесь вносить свои предложения в изменения программы курса. Мы будем благодарны.

Предварительные условия

Мы предполагаем, что у вас имеется знания языка программирования python (6.01) и желание писать код.

Большая часть кода с которым вам прийдется взаимодействовать будет объяснена на примерах, которые вы сможете модифицировать.

Надеемся, что не много специализированного кода будет написано, за исключением программ, которые вы хотите написать!

Чему мы будем учить

Мы будем учить базовым навыкам анализа данных на конкретных примерах.

Все ваши программы будут написаны на языке программирования Python. График работы выглядит следующим образом:

День 0(сегодня): Настройка окружения

День 1: От нахождения массива данных онлайн до построения нескольких графиков взносов в президентскую компанию.

День 2: Множество примеров визуализации, практика перехода от данных к графикам.

День 3: Основы статистики, включая t-критерии Стьюдента, линейные регрессии и статистическая значимость. Мы будем использовать финансирование компаний и уровень здравоохранения по графствам.

День 4: Обработка больших массивов текста используя tf-idf и Коэффициент Отиаи.

День 5: Расширение масштабов для анализа больших массивов данных используя Hadoop/MapReduce на большей копии массива Enron.

День 6: Вы рассказываете! Можно разбиться по группам или делать задание самостоятельно и рассказать нам историю на основе данных, которые вы выберете!

Чему мы не будем учить

R. R это замечательный фреймоврк для анализа данных, статистики и построения графиков. Мы не будем его использовать, потому что можем достичь наших целей используя Python, а также больше студентов MIT знакомы с Python. 

Визуализацию с использованием браузерных технологий(canvas, svg, d3 и т.д.) или не Python языков программирования

(Processing https://processing.org/).

Это очень интересные инструменты, они задействованы во множестве визуализаций в Интернете(например визуализация  Нью-Йорк Таймс http://open.blogs.nytimes.com/2008/10/27/the-new-york-times-data-visualization-lab/?_r=0), однако они не входят в перечень изучаемых материалов в данном классе.

Мы научим вас как визуализировать данные на статичных графиках. 

Среда Программирования(Важно!)

Перед началом урока, пожалуйста настройте среду программирования. Вам будет необходимо установить некоторое программное обеспечение, программные пакеты и загрузить массивы данных. 

Мы предполагаем, что вы занимаетесь разработкой в unix-подобной среде и знакомы с базовыми командами(напр. less, man).

Если вы пользуетесь операционной системой windows, мы предполагаем, что вы воспользуетесь cygwin.

Инструменты и Библиотеки

Для прохождения курса вам необходимо будет установить несколько инструментов. Среди основных можно выделить: 

 python 2.7 (https://www.python.org/getit/releases/2.7/)

на Mac OSX или других unix подобных системах введите $\textbf{python -- version}$ , чтобы удостоверится что у вас установлена необходимая версия Python.

easy_install (https://pypi.python.org/pypi/setuptools)

менеджер программных пакетов Python.

pip (https://pypi.python.org/pypi/pip#downloads)

Для более простой установки пакетов python необходим easy_install.

Можно установить через sudo easy_install pip или загрузить tar.gz файл по ссылке снизу, распаковать его, перейти в новую деректорию и ввести sudo python setup.py install.

git (https://git-scm.com/)

git- это система контроля версий. Используя её вы может просматривать наш код и примеры.

Если все работает, посмотрите исходный код dataiap в дериктроии dataiap используя git clone git://github.com/dataiap/dataiap.git dataiap
git clone git://github.com/dataiap/dataiap.git dataiap 


Мы переодически будем обновлять репозиторий. Для того, чтобы получить доступ к последней версии перейдите в дерикторию dataiap и введите git pull.

Нам также потребуются некоторые модуль Python:

numpy 1.6.x (https://sourceforge.net/projects/numpy/files/NumPy/1.6.1/): numerical processing module.

пользователи PIP могут ввести sudo pip install numpy

scipy 0.10 (https://sourceforge.net/projects/scipy/files/scipy/0.10.0/): научный вычислительный модуль.

Пользователи Ubuntu могут ввести команду sudo apt-get install python-scipy

Пользователи PIP могут ввести sudo pip install scipy

Даже если PIP работает, на MacOS может быть потребуется установить Fortran (https://www.scipy.org/install.html). We strongly recommend reading and following the installation instructions (https://www.scipy.org/install.html).


К сожалению, scipy может не работать в PIP и вам потребуется скомпилировать его из исходника (https://scipy.org/install.html) (see "Obtaining and Building NumPy and SciPy"). Попробуйте что-то вроде:

◼ git clone https://github.com/scipy/scipy.git

◼ cd scipy


◼ python setup.py build

◼python setup.py install

matplotlib 1.1.0 (https://sourceforge.net/projects/matplotlib/files/matplotlib/matplotlib-1.1.0

Пользователи  PIP могут ввести sudo pip install matplotlib

Внимание! Этот перевод, возможно, ещё не готов.
Его статус: идёт перевод

Переведено на Нотабеноиде
http://translate.kursomir.ru/book/147/897

Переводчики: arseny332

